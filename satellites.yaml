openapi: "3.0.0"
info:
  version: 1.0.0
  title: Satellite API
  description: This is an API for managing satellites.
  license:
    name: Attribution ShareAlike (CC BY-SA)
    url: https://creativecommons.org/licenses/by-sa/4.0/legalcode
servers:
  - url: http://satellite.api.example.com/v1
paths:
  /satellites:
    get:
      summary: List Satellites
      description: List of all satellites.
      operationId: listSatellites
      tags:
        - Satellites
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of satellites
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Satellites"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a Satellite
      operationId: createSatellites
      requestBody:
        description: Satellite body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Satellite'
      tags:
        - Satellites
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /satellites/{satellite_id}:
    get:
      summary: Get Satellite
      description: Gets a single satellite.
      operationId: getSatellite
      tags:
        - Satellites
      parameters:
        - name: satellite_id
          in: path
          required: true
          description: The id of the satellite to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Satellite"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Update Satellite
      description: Updates a satellite.
      operationId: updateSatellite
      parameters:
        - name: satellite_id
          in: path
          required: true
          description: The id of the satellite to retrieve
          schema:
            type: string
      requestBody:
        description: Satellite body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Satellite'
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Satellite"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
      tags:
        - Satellites
    delete:
      summary: Delete Satellite
      description: Delete a satellite.
      operationId: deleteSatellite
      tags:
        - Satellites
      parameters:
        - name: satellite_id
          in: path
          required: true
          description: The id of the satellite to retrieve
          schema:
            type: string
      responses:
        '202':
          description: Delete Accepted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Satellite:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    Satellites:
      type: array
      items:
        $ref: "#/components/schemas/Satellite"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
